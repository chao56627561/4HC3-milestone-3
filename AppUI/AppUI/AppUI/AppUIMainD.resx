<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAK8AAABfCAYAAACeAJdsAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8
        AAADaGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0w
        TXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIg
        eDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2
        OjI3ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIv
        MjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBN
        TT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5h
        ZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFk
        b2JlLmNvbS94YXAvMS4wLyIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjAxODAxMTc0
        MDcyMDY4MTE5MkIwODg4NTNCRjc5M0E4IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjRCODYyNDk5
        OEMzODExRTU4ODcwQTFGMzQ5M0MxRkFGIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjRCODYyNDk4
        OEMzODExRTU4ODcwQTFGMzQ5M0MxRkFGIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBD
        UzYgKE1hY2ludG9zaCkiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlp
        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
</value>
  </data>
</root>